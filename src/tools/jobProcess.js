/*
 * Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
 */

/* This file uses jobProcess.xml and creates the file jobsCb.api.js */
var fs = require('fs'),
    xml2js = require('xml2js');

var jobLists = [];

createFile = function(result) {
  var itemList = result['jobLists']['item'];
  var len = 0;
  var jobCbStr = "";
  var regUrlStr = "\n";
  var commentStr = "";
  var method;
  var jobChannel = "";
  var jobDependStr = "";
  var dependFound = false;

  commentStr += "/*\n";
  commentStr += " * Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.\n";
  commentStr += " */\n";
  commentStr += "\n";
  var date = new Date();
  commentStr +=  "/* This file is automatically generated from the jobCallback.xml at\n"
  commentStr += "   " + date;
  commentStr += "\n";
  commentStr += "   Please do not edit this file."
  commentStr += "\n"
  commentStr += " */";
  commentStr += "\n";
  commentStr += "\n";

  jobCbStr += commentStr;

  var requiresList = result['jobLists']['require'];
  var len = requiresList.length;
  for (var i = 0; i < len; i++) {
      if (i == 0) {
         if ((requiresList[i] == null) || (null == requiresList[i]['define']) ||
             (null == requiresList[i]['path'])) {
             assert(0);
         }
         jobCbStr += 'var ' + requiresList[i]['define'] + ' = require(' +
            "'" + requiresList[i]['path'] + "')\n";
         continue;
      }
      jobCbStr += '  , ' + requiresList[i]['define'] + ' = require(' +
          "'" + requiresList[i]['path'] + "')\n";
  }

  jobCbStr += "  ;\n";
  jobCbStr += "\n";
  jobCbStr += "\n";
  jobCbStr += "if (!module.parent) {";
  jobCbStr += "\n    console.log(\"Call main app through 'node app'\");";
  jobCbStr += "\n    process.exit(1);";
  jobCbStr += "\n}";
  jobCbStr += "\n";
  jobCbStr += "var jobsCb = module.exports;";
  jobCbStr += "\n";
  jobCbStr += "\n";
  jobCbStr += "\nvar defMaxActiveJobs = 10;";
  jobCbStr += "\nvar maxActiveJobs = config.maxActiveJobs || defMaxActiveJobs;\n";
  jobCbStr += "\n";

  jobChannel += "\n        /* Publish the data on pubChannel And Save the data key as \n";
  jobChannel +=   "           saveChannel\n";
  jobChannel +=   "         */\n";

  jobCbStr += "jobsCb.jobsProcess = function() {";

  len = itemList.length;
  for (var i = 0; i < len; i++) {
    jobCbStr +=   "\n    jobsApi.jobs.process('";
    jobCbStr += itemList[i]['jobName'] + "', maxActiveJobs, function(job, done) {";
    jobCbStr += jobChannel;
    jobCbStr += "        var jobStartTime = commonUtils.getCurrentTimestamp();\n";
    jobCbStr += "        job.data['jobStartTime'] = jobStartTime;\n";
    jobCbStr += "        var pubChannel = job.data.taskData.pubChannel;\n" +
                "        if (null == pubChannel) {\n" +
                "            logutils.logger.error('pubChannel is null for jobData as ' + job.data);\n" +
                "        }\n" +
                "        var saveChannel = job.data.taskData.saveChannel;\n" +
                "        var cbTimeout = job.data.taskData.cbTimeout;\n";
    jobCbStr += "        jobsProcess." + itemList[i]['callback'] + "(pubChannel, saveChannel,\n" +
                "              job.data, commonUtils.doEnsureExecution(function(errCode, pubData, saveData, doSave, expTime) {\n" +
                "            redisPub.publishDataToRedis(pubChannel, saveChannel, errCode, pubData, saveData,\n" +
                "                                        doSave, expTime, done);\n"
    jobCbStr += "        }, cbTimeout));\n";
    jobCbStr += "    });\n";
    if (itemList[i]['requireJob']) {
        dependFound = true;
        jobDependStr += "    jobsApi.jobListenerReadyQEvent.on(" +
            "'" + itemList[i]['jobName'] + '@' + itemList[i]['requireJob'] + "'" + ",\n" +
            "        function(dependData, pubChannel, saveChannel, done) {\n";
        jobDependStr += "        var storedData = jobsApi.getDataFromStoreQ(pubChannel);\n";
        jobDependStr += "        var cbTimeout = job.data.taskData.cbTimeout;\n";
        jobDependStr += "        /* Now call the API to do the main work */\n";
        jobDependStr += "        jobsProcess.mainJob" + itemList[i]['callback'] + "(\n" +
                        "            pubChannel, saveChannel, dependData, storedData.data," +
                        " storedData.jobData,\n" +
                        "            commonUtils.doEnsureExecution(function(errCode, pubData, saveData, doSave, expTime) {\n" +
                        "               redisPub.publishDataToRedis(pubChannel, saveChannel, errCode, pubData, saveData,\n" +
                        "                                           doSave, expTime, done);\n" +
                        "        }, cbTimeout));\n";
        jobDependStr += "    })\n";
    }
  }
  jobCbStr += "}\n";
  if (true === dependFound) {
      jobDependStr = "\njobsCb.addjobListenerEvent = function() {\n" +
          jobDependStr;
      jobCbStr += jobDependStr;
  }

  jobCbStr += "}";
  fs.writeFile(__dirname + '/../serverroot/jobs/core/jobsCb.api.js', jobCbStr, function(err) {
    if (err) throw err;
  });
}

var parser = new xml2js.Parser();
parser.addListener('end', function(result) {
    /* Create new file and add this info */
    createFile(result);
    console.log("Done, creating file: " + __dirname + '/../serverroot/jobs/core/jobsCb.api.js');
});
fs.readFile(__dirname + '/../xml/jobProcess.xml', function(err, data) {
    parser.parseString(data);
});

